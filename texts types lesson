"""Задание 3.1

Обработать строку ospf_route и вывести информацию в виде:
Protocol:               OSPF
Prefix:                 10.0.24.0/24
AD/Metric:              110/41
Next-Hop:               10.0.13.3
Last update:            3d18h
Outbound Interface:     FastEthernet0/0
В разделе Форматирование строк добавились примеры, которые помогут с отображением вывода столбцами.
ospf_route = "O        10.0.24.0/24 [110/41] via 10.0.13.3, 3d18h, FastEthernet0/0"
"""

ospf_route = "O        10.0.24.0/24 [110/41] via 10.0.13.3, 3d18h, FastEthernet0/0"
ospf_route = ospf_route.replace('[','')
ospf_route = ospf_route.replace(']','')
ospf_route = ospf_route.replace(',','')
ospf_route = ospf_route.replace('via','')
ospf_route = ospf_route.replace('O','OSPF')
list_ospf = ospf_route.split()
keys_ospf = ['Protocol','Prefix','AD/Metric','Next-Hop','Last update','Outbound Interface']
dict_ospf = dict(zip(keys_ospf, list_ospf))
for key, value in dict_ospf.items():
    print '{:45}{:45}'.format(key,value)

"""Задание 3.2
Преобразовать строку MAC с формата XXXX:XXXX:XXXX в XXXX.XXXX.XXXX
MAC = "AAAA:BBBB:CCCC"
"""

mac = "AAAA:BBBB:CCCC"
mac = mac.replace(':','.')
print('MAC = "%s' % mac)

"""Задание 3.3
Получить из строки CONFIG список VLAN вида ['1', '3', '10', '20', '30', '100'].
CONFIG = "switchport trunk allowed vlan 1,3,10,20,30,100"
"""

CONFIG = "switchport trunk allowed vlan 1,3,10,20,30,100"
CONFIG = CONFIG.split()
vlans = CONFIG[-1]
vlans = vlans.split(',')
print vlans

"""Задание 3.4
Из строк command1 и command2 получить список VLAN, которые есть и в команде command1 и в команде command2. Не использовать для решения задачи циклы, оператор if.
Для данного примера, результатом должен быть список: [1, 3, 100]
"""

command1 = "switchport trunk allowed vlan 1,3,10,20,30,100"
command2 = "switchport trunk allowed vlan 1,3,100,200,300"
command1 = command1.split()
command2 = command2.split()
command1 = command1[-1]
command2 = command2[-1]
command1 = set(command1.split(','))
command2 = set(command2.split(','))
samevlans = list(command1.intersection(command2))
print samevlans
